apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: classic 
  namespace: future-oracle 
  labels:
    app: classic
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: classic
  serviceName: classic
  template:
    metadata:
      name: classic
      labels:
        app: classic
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: parity
          image: "parity/parity:v2.5.2-beta"
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
          args:
          - "--chain=classic"
          - "--base-path=/classic-data"
          - "--db-path=/classic-data/chains" 
          - "--keys-path=/classic-data/keys"
          - "--websocket-port=8546"
          - "--websocket-interface=0.0.0.0"
          - "--websocket-apis=web3,eth,net,rpc,parity"
          - "--jsonrpc-hosts=all"
          - "--no-ancient-blocks"
          - "--no-serve-light"
          - "--max-peers=250"
          - "--snapshot-peers=50"
          ports:
            - containerPort: 8546
              protocol: TCP
              name: websocket
            - containerPort: 443
              protocol: TCP
              name: https
          readinessProbe:
            httpGet:
              port: 8545
              path: /api/health
            initialDelaySeconds: 4500 
            periodSeconds: 300
          livenessProbe:
            tcpSocket:
              port: 8545
            initialDelaySeconds: 4500 
            periodSeconds: 300
          volumeMounts:
            - name: classic-config
              mountPath: /classic-config
              readOnly: true
            - name: classic-data
              mountPath: /classic-data
    volumes:
      - name: classic-config
        secret:
          secretName: classic-config
  volumeClaimTemplates:
    - metadata:
        name: classic-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "classic-ssd"
        resources:
          requests:
            storage: 50Gi
